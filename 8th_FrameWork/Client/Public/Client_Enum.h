#pragma once
namespace Client
{
	enum ANIM_TYPE
	{
		ANIM_BASE,
		ANIM_ATTACK_HAND,
		ANIM_ATTACK_KUNAI,
		ANIM_ATTACK_NINZASWORD,
		ANIM_ATTACK_BIGSWORD,
		ANIM_THROW,
		ANIM_BEATEN,
		ANIM_GUARD,
		ANIM_SKILL_ATTACK,
		ANIM_SKILL_SHOOT,
		ANIM_WIN_TYPE_1,
		ANIM_WIN_TYPE_2,
		ANIM_WIN_TYPE_DANCE,
		ANIM_WIN_TYPE_3,
		ANIM_WIN_TYPE_4,
		ANIM_APPEARANCE,
		ANIM_WIN_TYPE_BOX,
		ANIM_WIN_TYPE_DANCE2,
		ANIM_BOSS,
		ANIM_SKILL_DEFEND,
		ANIM_EIGHTGATES,
		ANIM_KOTO,
		ANIM_WATERPRISON,
		ANIM_END,
	};

	enum UNIT_EYE_TYPE
	{
		EYE_DEFAULT,
		EYE_GREEN,
		EYE_BLUE,
		EYE_PURPLE,
		EYE_SNAKE,
		EYE_WHITE,
		EYE_DUMP,
		EYE_KURAMA,
		EYE_RINNEGAN,
		EYE_BYAKUGAN,
		EYE_SAGE,
		EYE_SYARINGAN,
		EYE_KAMUI,
		EYE_EIGHTGATES,
		EYE_KOTO,
		EYE_END

	};

	enum MODEL_PART_TYPE
	{
		MODEL_PART_FACE,
		MODEL_PART_HEADGEAR,
		MODEL_PART_BODYUPPER,
		MODEL_PART_BODYLOWER,
		MODEL_PART_HEADGEARSUB,
		MODEL_PART_BODYUPPERSUB,
		MODEL_PART_BODYLOWERSUB,
		MODEL_PART_BODYSUB,
		MODEL_PART_OVERALL,
		MODEL_PART_OVERALLSUB,
		MODEL_PART_ACCESSORY,
		MODEL_PART_LWEAPON,
		MODEL_PART_RWEAPON,
		MODEL_PART_WEAPONSUB,
		MODEL_PART_END,
	};
	enum PROTOTYPE_ID_TYPE
	{
		ID_LEVEL,
		ID_UI,
		ID_MESHGAMEOBJECT,
		ID_GAMEOBJECT,
		ID_COMPONENT,
		ID_END
	};

	enum CHANNEL_CLIENT
	{
		CHANNEL_BGM,
		CHANNEL_UI,
		CHANNEL_ENVIRONMENT,
		CHANNEL_EFFECTS,
		CHANNEL_VOICE,
		CHANNEL_END = CH_GROUP_END
	};

	enum COL_GROUP_CLIENT
	{
		COL_DEFAULT,
		COL_REALBODY,
		COL_BODY,
		COL_PLAYERHITBOX,
		COL_PLAYERATTACK,
		COL_PLAYERTHROW,
		COL_PLAYERSKILL,
		COL_PLAYERSPECIAL,
		COL_ENEMYHITBOX,
		COL_ENEMYATTACK,
		COL_ENEMYTHROW,
		COL_ENEMYSKILL,
		COL_SKILLRANGE,
		COL_EVENT,
		COL_WALL,

		COL_END = 32,
	};

	enum OBJ_GROUP_CLIENT
	{
		GROUP_STATIC,
		GROUP_DEFAULT,
		GROUP_ENEMY,
		GROUP_DECORATION,
		GROUP_PROP,
		GROUP_UI,
		GROUP_PLAYER,
		GROUP_LOADING,
		GROUP_EFFECT,

		GROUP_END = GR_END
	};

	enum LEVEL_TYPE_CLIENT
	{
		LEVEL_LOADING,
		LEVEL_UNITY,
		LEVEL_LOGO,
		LEVEL_MAINMENU,
		LEVEL_CUSTOMIZING,
		LEVEL_STAGE1,
		LEVEL_STAGE2,
		LEVEL_LOBBY,
		LEVEL_DUNGEON,
		LEVEL_END
	};

	enum COMPONENT_PIPELINE
	{
		CP_BEFORE_NAVIGATION,
		CP_NAVIGATION,
		CP_TRANSFORM,
		CP_AFTER_TRANSFORM,

		CP_BEFORE_RENDERER,
		CP_RIGHTBEFORE_RENDERER,
		CP_RENDERER,
		CP_AFTER_RENDERER,
		CP_END,
	};

	enum SHADER_FILE_ID
	{
		SHADER_DEFERRED,
		SHADER_BLUR,
		SHADER_GLOW,
		SHADER_SHADOW,
		SHADER_VTXTEX,
		SHADER_VTXCUBETEX,
		SHADER_VTXNOR,
		SHADER_VTXMODEL,
		SHADER_VTXANIMMODEL,
		SHADER_VTXMODELINSTANCE,
		SHADER_VTXRECTINSTANCE,
		SHADER_VTXTRIINSTANCE,
		SHADER_VTXEFFECTS,
		SHADER_VTXDECALCUBE,
		SHADER_END
	};

	enum VTXMODEL_PASS_TYPE
	{
		VTXMODEL_PASS_DEFAULT,
		VTXMODEL_PASS_CW,
		VTXMODEL_PASS_NONE,
		VTXMODEL_PASS_BUILDING,
		VTXMODEL_PASS_GROUND,
		VTXMODEL_PASS_GROUNDEXAM,
		VTXMODEL_PASS_SAMPLE,
		VTXMODEL_PASS_NORMALMAPPING,
		VTXMODEL_PASS_SHADOW,
		VTXMODEL_PASS_GROUNDBREAK,
		VTXMODEL_PASS_STATICSHADOW,
		VTXMODEL_PASS_END,
	};

	enum VTXEFFECT_PASS_TYPE
	{
		VTXEFFECT_PASS_DEFAULT,
		VTXEFFECT_PASS_LINEX,
		VTXEFFECT_PASS_LINEY,
		VTXEFFECT_PASS_TEXT,
		VTXEFFECT_PASS_CARTOON,
		VTXEFFECT_PASS_DISTORTION,
		VTXEFFECT_PASS_NOISE,
		VTXEFFECT_PASS_DECAL,
		VTXEFFECT_PASS_END,
	};

	enum VTXANIM_PASS_TYPE
	{
		VTXANIM_PASS_DEFAULT,
		VTXANIM_PASS_FACE,
		VTXANIM_PASS_EYE,
		VTXANIM_PASS_PREVIEW,
		VTXANIM_PASS_PREVIEWREF,
		VTXANIM_PASS_HIT,
		VTXANIM_PASS_PREVIEWFACE,
		VTXANIM_PASS_SHADOW,
		VTXANIM_PASS_NORMAL,
		VTXANIM_PASS_DRAGON,

		VTXANIM_PASS_END,
	};

	enum VTXINSTANCE_PASS_TYPE
	{
		VTXINSTANCE_PASS_DEFAULT,
		VTXINSTANCE_PASS_PARTICLE,
		VTXINSTANCE_PASS_SHADOW,
		VTXINSTANCE_PASS_STATICSHADOW,

		VTXINSTANCE_PASS_END,
	};

	enum VTXRECTINSTANCE_PASS_TYPE
	{
		VTXRECTINSTANCE_PASS_DEFAULT,
		VTXRECTINSTANCE_PASS_COLORMAP,
		VTXRECTINSTANCE_PASS_DEBUG,
		VTXRECTINSTANCE_PASS_ANIMATION,
		VTXRECTINSTANCE_PASS_ANIMATIONALPHA,

		VTXRECTINSTANCE_PASS_END,
	};

	enum VTXTRIINSTANCE_PASS_TYPE
	{
		VTXTRIINSTANCE_PASS_DEFAULT,

		VTXTRIINSTANCE_PASS_END,
	};

	enum VTXDECALCUBE_PASS_TYPE
	{
		VTXDECALCUBE_PASS_DEFAULT,

		VTXDECALCUBE_PASS_END,
	};

	enum VTXTEX_PASS_TYPE
	{
		VTXTEX_PASS_DEFAULT,
		VTXTEX_PASS_ALPHA,
		VTXTEX_PASS_LOADINGBAR,
		VTXTEX_PASS_NOBLACK,
		VTXTEX_PASS_CROSSHAIR,
		VTXTEX_PASS_COLORNOBLACK,
		VTXTEX_PASS_SKILLICON,
		VTXTEX_PASS_HPBAR,
		VTXTEX_PASS_HPBAREFFECT,
		VTXTEX_PASS_ENEMYHPBAR,
		VTXTEX_PASS_ENEMYHPBARLINE,
		VTXTEX_PASS_DIALOG,
		VTXTEX_PASS_BOSSHP,
		VTXTEX_PASS_TRAIL,
		VTXTEX_PASS_KOTO,
		VTXTEX_PASS_FOOTTRAIL,
		VTXTEX_PASS_END,
	};

	enum VTXCUBETEX_PASS_TYPE
	{
		VTXCUBETEX_PASS_SKYBOX,
		VTXCUBETEX_PASS_WIRE,
		VTXCUBETEX_PASS_END,
	};

	enum VTXNOR_PASS_TYPE
	{
		VTXNOR_PASS_TERRAIN,
		VTXNOR_PASS_NAVIGATION,
		VTXNOR_PASS_END,
	};

	enum MESH_TYPE
	{
		MESH_RECT,
		MESH_END,
	};

	enum STATE_TYPE
	{
		STATE_IDLE_PLAYER,
		STATE_WALK_PLAYER,
		STATE_WALK_END_PLAYER,
		STATE_RUN_PLAYER,
		STATE_RUN_END_PLAYER,
		STATE_JUMP_PLAYER,
		STATE_WALLJUMP_PLAYER,
		STATE_WALLJUMPEND_PLAYER,
		STATE_FALL_PLAYER,
		STATE_DODGE_PLAYER,
		STATE_LAND_PLAYER,
		STATE_DOUBLEJUMP_PLAYER,
		STATE_DASH_PLAYER,
		STATE_AIRDASHSTART_PLAYER,
		STATE_AIRDASHLOOP_PLAYER,
		STATE_AIRDASHEND_PLAYER,

		/* Night Guy */
		STATE_IDLE_NIGHTGUY,
		STATE_WALK_NIGHTGUY,
		STATE_WALK_END_NIGHTGUY,
		STATE_RUN_NIGHTGUY,
		STATE_RUN_END_NIGHTGUY,
		STATE_JUMP_NIGHTGUY,
		STATE_DOUBLEJUMP_NIGHTGUY,
		STATE_WALLJUMP_NIGHTGUY,
		STATE_WALLJUMPEND_NIGHTGUY,
		STATE_FALL_NIGHTGUY,
		STATE_LAND_NIGHTGUY,
		STATE_DASH_NIGHTGUY,



		STATE_CJ_START_PLAYER,
		STATE_CJ_LOOP_PLAYER,
		STATE_CJ_END_PLAYER,

		STATE_WIRE_PLAYER,
		STATE_WIREDASH_PLAYER,
		STATE_HIT_GROUND_PLAYER,
		STATE_BLASTED_GROUND_PLAYER,
		STATE_HIT_AIR_PLAYER,
		STATE_HIT_FALL_PLAYER,
		STATE_WALLHIT_PLAYER,
		STATE_DOWN_PLAYER,
		STATE_GETUP_PLAYER,

		STATE_CHIDORI,
		STATE_RASENGAN,
		STATE_EIGHTGATES,
		STATE_GUARD_PLAYER,
		STATE_GUARDHIT_PLAYER,
		STATE_RASENSURIKEN_PLAYER,

		//여기까지 타겟 찾는거고 밑부턴 타겟 안찾ㅇ므


		STATE_HANDATTACK_1_PLAYER,
		STATE_HANDATTACK_2_PLAYER,
		STATE_HANDATTACK_3_PLAYER,
		STATE_HANDATTACK_4_PLAYER,
		STATE_HANDATTACK_5_PLAYER,
		STATE_HANDATTACK_DASH_PLAYER,
		STATE_HANDATTACK_POWER_PLAYER,

		STATE_HANDAERIALATTACK_1_PLAYER,
		STATE_HANDAERIALATTACK_2_PLAYER,
		STATE_HANDAERIALATTACK_3_PLAYER,
		STATE_HANDAERIALATTACK_4_PLAYER,

		STATE_NSATTACK_1_PLAYER,
		STATE_NSATTACK_2_PLAYER,
		STATE_NSATTACK_3_PLAYER,
		STATE_NSATTACK_4_PLAYER,


		STATE_NSAERIALATTACK_1_PLAYER,
		STATE_NSAERIALATTACK_2_PLAYER,
		STATE_NSAERIALATTACK_3_PLAYER,

		STATE_FIREBALL_PLAYER,
		STATE_WATERPRISON_PLAYER,
		STATE_SHARKBOMB_PLAYER,
		STATE_KAMUI_PLAYER,
		STATE_WATERFALL_PLAYER,
		STATE_NIGHTGUY_PLAYER,
		STATE_NIGHTGUYATTACK_PLAYER,
		STATE_LEAFHURRICANE_PLAYER,
		STATE_LEAFHURRICANE_ATTACK_PLAYER,


		STATE_ATTACK_1_NIGHTGUY,
		STATE_ATTACK_2_NIGHTGUY,


		STATE_RASENGAN_RUN,
		STATE_RASENGAN_ATTACK,

		STATE_CHIDORI_RUN,
		STATE_CHIDORI_ATTACK,

		STATE_THROW_PLAYER,




		STATE_POSE,




		STATE_CHIDORI_ENEMY,
		STATE_FIREBALL_ENEMY,

		STATE_IDLE_ENEMY,
		STATE_WALK_ENEMY,
		STATE_RUN_ENEMY,
		STATE_DASH_ENEMY,
		STATE_JUMP_ENEMY,
		STATE_DODGE_ENEMY,
		STATE_GUARD_ENEMY,
		STATE_GUARDHIT_ENEMY,
		STATE_FALL_ENEMY,
		STATE_LAND_ENEMY,
		STATE_WALLJUMP_ENEMY,
		STATE_WALLJUMPEND_ENEMY,

		STATE_LAUGHINGMONK_ENEMY,
		STATE_DOMEDWALL_ENEMY,
		STATE_DOMEDWALLEND_ENEMY,

		STATE_HANDATTACK_1_ENEMY,
		STATE_HANDATTACK_2_ENEMY,
		STATE_HANDATTACK_3_ENEMY,
		STATE_HANDATTACK_4_ENEMY,
		STATE_HANDAERIALATTACK_4_ENEMY,

		STATE_THROW_ENEMY,


		STATE_LEAFHURRICANE_ENEMY,
		STATE_LEAFHURRICANE_ATTACK_ENEMY,

		STATE_DOWN_ENEMY,
		STATE_WALLHIT_ENEMY,
		STATE_WALLHITEND_ENEMY,
		STATE_GETUP_ENEMY,
		STATE_HIT_GROUND_ENEMY,
		STATE_BLASTED_GROUND_ENEMY,
		STATE_STRUGGLE_ENEMY,
		STATE_HIT_AIR_ENEMY,
		STATE_HIT_FALL_ENEMY,
		STATE_DEATH_ENEMY,

		STATE_GOTARGET,
		STATE_WALLJUMP_GO,
		STATE_WALLJUMPEND_GO,
		STATE_FALL_GO,
		STATE_LAND_GO,
		STATE_APPEARANCE,
		STATE_BOSS,

		STATE_KOTOAMATSUKAMI,

		STATE_END,
	};
}

